---
layout: post
title:      "Finding Inspiration in Agriculture: Hog Tracker"
date:       2018-04-16 03:28:26 +0000
permalink:  finding_inspiration_in_agriculture_hog_tracker
---


Without fail, almost every day my teenage daughter changes the way I see the world for the better.  Two months ago, if you would have asked me if I'd be helping her raise a hog for the Future Farmers of America (FFA) program I would have laughed so hard I probably would have fallen out of my chair. My daughter...the cheerleader who hates bugs with a passion, raise a hog? I would have told you had a better chance of getting hit by lightning.  Yet, here we are...nearly 15 weeks into our first hog farming forray and the Spring Fair is just two short days away. It's been an amazing experience, and I've learned allot about raising hogs. So when I came upon this point in my studies where my next project was due at Flat Iron it was an obvious choice; I wanted to make something to help the hog farming program. One of the biggest challenges we experienced early-on in our efforts was how difficult it was to stay in communication with the other students who were also raising hogs so that we could compare our hogs rate of growth against theirs. In addition, because we live in a rural community it just wasn't practical for the teachers running the hog program to drive from farm to farm each week to check on each students hog. To help solve this problem, I created a web application I named "Hog Tracker".  Hog Tracker is a simple CRUD (Create Read Update Delete) web application that I wrote using Ruby and Sinatra ActiveRecord that allows individual students and teachers to create a user account to log their hogs weekly growth rate and view other hogs progress within the program. Each user account is comprised of a userid, password (which is encrypted via the BCrypt gem), and an email address. Users can add and delete individual hogs and log thier weekly weights, and can view a list of the most up-to-date weights for all the hogs in the program. Hog Tracker was built with an eye toward security, so although users can see a list of everyone's hogs, they can only add, modify or delete hogs associated with their specific account. I'd be pulling your leg if I said this module of instruction on Sinatra ActiveRecord wasn't challenging; learning how to effectively use both the Model View Controller (MVC) pattern and RESTful routes was allot to try and master, but I feel as if I've got a solid foundation for which to build my future coding practices. The power of ActiveRecords route management abilities and the ease of which it allows associations between database entities to be formed make it both formidable and versatile.

